{
  "url": "https://developers.cloudflare.com/reference-architecture/design-guides/secure-application-delivery/#_top",
  "title": "Securely deliver applications with Cloudflare - Cloudflare Reference Architecture docsYesNoYesNo",
  "keyword": "",
  "content": "Skip to content          Cloudflare Docs            Search            Products  Learning  Status  Support  Log in   GitHub X YouTube       Select theme    DarkLightAuto        \n\tStarlightThemeProvider.updatePickers();\n const r=\"starlight-theme\",o=e=>e===\"auto\"||e===\"dark\"||e===\"light\"?e:\"auto\",c=()=>o(typeof localStorage<\"u\"&&localStorage.getItem(r));function n(e){typeof localStorage<\"u\"&&localStorage.setItem(r,e===\"light\"||e===\"dark\"?e:\"\")}const l=()=>matchMedia(\"(prefers-color-scheme: light)\").matches?\"light\":\"dark\";function t(e){StarlightThemeProvider.updatePickers(e),document.documentElement.dataset.theme=e===\"auto\"?l():e,n(e)}matchMedia(\"(prefers-color-scheme: light)\").addEventListener(\"change\",()=>{c()===\"auto\"&&t(\"auto\")});class s extends HTMLElement{constructor(){super(),t(c()),this.querySelector(\"select\")?.addEventListener(\"change\",a=>{a.currentTarget instanceof HTMLSelectElement&&t(o(a.currentTarget.value))})}}customElements.define(\"starlight-theme-select\",s); class n extends HTMLElement{constructor(){super();const e=this.querySelector(\"select\");e&&e.addEventListener(\"change\",t=>{t.currentTarget instanceof HTMLSelectElement&&(window.location.pathname=t.currentTarget.value)})}}customElements.define(\"starlight-lang-select\",n);           class s extends HTMLElement{constructor(){super(),this.btn=this.querySelector(\"button\"),this.btn.addEventListener(\"click\",()=>this.toggleExpanded());const t=this.closest(\"nav\");t&&t.addEventListener(\"keyup\",e=>this.closeOnEscape(e))}setExpanded(t){this.setAttribute(\"aria-expanded\",String(t)),document.body.toggleAttribute(\"data-mobile-menu-expanded\",t)}toggleExpanded(){this.setExpanded(this.getAttribute(\"aria-expanded\")!==\"true\")}closeOnEscape(t){t.code===\"Escape\"&&(this.setExpanded(!1),this.btn.focus())}}customElements.define(\"starlight-menu-button\",s);              Reference Architecture      \n\t\t(() => {\n\t\t\ttry {\n\t\t\t\tif (!matchMedia('(min-width: 50em)').matches) return;\n\t\t\t\t/** @type {HTMLElement | null} */\n\t\t\t\tconst target = document.querySelector('sl-sidebar-state-persist');\n\t\t\t\tconst state = JSON.parse(sessionStorage.getItem('sl-sidebar-state') || '0');\n\t\t\t\tif (!target || !state || target.dataset.hash !== state.hash) return;\n\t\t\t\twindow._starlightScrollRestore = state.scroll;\n\t\t\t\tcustomElements.define(\n\t\t\t\t\t'sl-sidebar-restore',\n\t\t\t\t\tclass SidebarRestore extends HTMLElement {\n\t\t\t\t\t\tconnectedCallback() {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst idx = parseInt(this.dataset.index || '');\n\t\t\t\t\t\t\t\tconst details = this.closest('details');\n\t\t\t\t\t\t\t\tif (details && typeof state.open[idx] === 'boolean') details.open = state.open[idx];\n\t\t\t\t\t\t\t} catch {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} catch {}\n\t\t})();\n\t     Overview     How to use     Find by solution        Reference Architectures         Overview     Cloudflare SASE with Microsoft     Content Delivery Network (CDN)     Load Balancing     Magic Transit     Multi-Vendor Architecture     Secure Access Service Edge (SASE)     Security Architecture            Reference Architecture Diagrams         Overview        Artificial Intelligence (AI)         Overview     Automatic captioning for video uploads     Composable AI architecture     Content-based asset creation     Ingesting BigQuery Data into Workers AI     Multi-vendor AI observability and control     Retrieval Augmented Generation (RAG)            Bots         Overview     Bot management            Content Delivery         Overview     Optimizing image delivery            Network         Overview     BYOIP to Cloudflare     Protect hybrid cloud networks     Protect ISP and telecommunications networks from DDoS attacks     Protect public networks            Secure Access Service Edge (SASE)         Overview     Access to private apps without having to deploy client agents     DNS filtering solution for Internet service providers     Self-hosted VoIP for hybrid users     ZTNA with external authorization            Security         Overview     Securing data at rest     Securing data in transit     Securing data in use            Serverless         Overview     A/B-testing using Workers     Fullstack applications     Serverless ETL pipelines     Serverless global APIs     Serverless image content management            Storage         Overview     Egress-free object storage in multi-cloud setups     Event notifications for storage     On-demand Object Storage Data Migration                Design Guides         Overview     Cloudflare's benefits for SaaS providers     Zero Trust for SaaS applications     Network-focused VPN migration     Secure application delivery     Zero trust architecture for startups            Implementation Guides         Overview        Zero Trust         Overview     Secure your Internet traffic and SaaS apps ↗     Replace your VPN ↗     Deploy Zero Trust Web Access ↗               \n\t\t(() => {\n\t\t\tconst scroller = document.getElementById('starlight__sidebar');\n\t\t\tif (!window._starlightScrollRestore || !scroller) return;\n\t\t\tscroller.scrollTop = window._starlightScrollRestore;\n\t\t\tdelete window._starlightScrollRestore;\n\t\t})();\n\t        Products  Learning  Status  Support  Log in   GitHub X YouTube       Select theme    DarkLightAuto        \n\tStarlightThemeProvider.updatePickers();\n            const a=document.getElementById(\"starlight__sidebar\"),n=a?.querySelector(\"sl-sidebar-state-persist\"),o=\"sl-sidebar-state\",i=()=>{let t=[];const e=n?.dataset.hash||\"\";try{const s=sessionStorage.getItem(o),r=JSON.parse(s||\"{}\");Array.isArray(r.open)&&r.hash===e&&(t=r.open)}catch{}return{hash:e,open:t,scroll:a?.scrollTop||0}},c=t=>{try{sessionStorage.setItem(o,JSON.stringify(t))}catch{}},d=()=>c(i()),l=(t,e)=>{const s=i();s.open[e]=t,c(s)};n?.addEventListener(\"click\",t=>{if(!(t.target instanceof Element))return;const e=t.target.closest(\"summary\")?.closest(\"details\");if(!e)return;const s=e.querySelector(\"sl-sidebar-restore\"),r=parseInt(s?.dataset.index||\"\");isNaN(r)||l(!e.open,r)});addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&d()});addEventListener(\"pageHide\",d);    On this page    Overview     Overview and the Cloudflare advantage     Onboarding and protecting the application with Cloudflare     Connectivity options        Routing to the origin     Example: Securing your application with Cloudflare Tunnel and Access     Using other Cloudflare services (CDN, WAF, Security Analytics, etc.)        Summary     On this page   Overview     Overview and the Cloudflare advantage     Onboarding and protecting the application with Cloudflare     Connectivity options        Routing to the origin     Example: Securing your application with Cloudflare Tunnel and Access     Using other Cloudflare services (CDN, WAF, Security Analytics, etc.)        Summary         Was this helpful?   Yes      No        What did you like?     Accurate    Easy to understand    Solved my problem    Helped me decide to use the product    Other        What went wrong?     Hard to understand    Incorrect information    Missing the information    Other        Thank you for helping improve Cloudflare's documentation!                    Products        …       Reference Architecture        Design Guides        Securely deliver applications with Cloudflare        {\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"/products/\",\"name\":\"Products\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"/reference-architecture/\",\"name\":\"Reference Architecture\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"/reference-architecture/design-guides/\",\"name\":\"Design Guides\"}},{\"@type\":\"ListItem\",\"position\":4,\"item\":{\"@id\":\"/reference-architecture/design-guides/secure-application-delivery/\",\"name\":\"Securely deliver applications with Cloudflare\"}}]} class t extends HTMLElement{constructor(){super(),this.isManualToggle=!1,this.breadcrumbs=null,this.mainBemClass=null,this.totalWidth=0,this.resizeObserver=null,this.handleTruncatedButtonClick=()=>{this.breadcrumbs?.classList.remove(\"is-truncated\"),this.isManualToggle=!0},this.mainBemClass=this.dataset.mainBemClass||null;const e=this.dataset.id;!(\"truncated\"in this.dataset)||!e||(this.breadcrumbs=document.getElementById(e),this.initializeCrumbs(),this.setupResizeObserver())}initializeCrumbs(){this.breadcrumbs?.querySelectorAll(`.${this.mainBemClass}__crumb`)?.forEach(s=>{this.totalWidth+=s.offsetWidth})}setupResizeObserver(){this.resizeObserver=new ResizeObserver(e=>{e.forEach(s=>{this.checkOverflow(s.target.clientWidth)})}),this.breadcrumbs&&this.resizeObserver.observe(this.breadcrumbs)}connectedCallback(){this.showHiddenCrumbs()}disconnectedCallback(){this.resizeObserver&&this.breadcrumbs&&(this.resizeObserver.unobserve(this.breadcrumbs),this.resizeObserver.disconnect())}toggleTruncated(e){this.breadcrumbs?.classList.toggle(\"is-truncated\",e)}showHiddenCrumbs(){const e=this.breadcrumbs?.querySelector(`.${this.mainBemClass}__truncated-button`);e?.removeEventListener(\"click\",this.handleTruncatedButtonClick),e?.addEventListener(\"click\",this.handleTruncatedButtonClick.bind(this))}checkOverflow(e){const s=this.totalWidth>e&&!this.isManualToggle;this.toggleTruncated(s),s||(this.isManualToggle=!1)}}customElements.get(\"astro-breadcrumbs\")||customElements.define(\"astro-breadcrumbs\",t);Securely deliver applications with Cloudflare   Last reviewed:  11 months ago                              const L=\"starlight-image-zoom-zoomable\",w=window.requestIdleCallback??(y=>setTimeout(y,1));customElements.define(\"starlight-image-zoom\",class f extends HTMLElement{#t;#i=[];#o;#s=this.querySelector(\"template\");#e={image:\"starlight-image-zoom-image\",opened:\"starlight-image-zoom-opened\",source:\"starlight-image-zoom-source\",transition:\"starlight-image-zoom-transition\"};#r=\"zoomTransform\";static#u=!1;constructor(){super();const t=()=>{w(()=>{const e=[...document.querySelectorAll(L)];e.length!==0&&(this.#m(e),document.addEventListener(\"click\",this.#d),window.addEventListener(\"resize\",this.#a))})};window.addEventListener(\"DOMContentLoaded\",t,{once:!0}),document.addEventListener(\"astro:after-preparation\",()=>{document.removeEventListener(\"click\",this.#d),window.removeEventListener(\"resize\",this.#a)},{once:!0}),f.#u||=document.addEventListener(\"astro:after-swap\",t)===void 0}#m(t){for(const e of t){const n=e.querySelector(\"img\");n&&(this.#i.push(n),e.querySelector(\"button\")?.addEventListener(\"click\",i=>{i.stopPropagation(),this.#l(n)}))}}#d=({target:t})=>{if(!(t instanceof HTMLElement&&t.closest(\"figcaption\"))){if(this.#t){this.#n();return}t instanceof HTMLImageElement&&this.#i.includes(t)&&this.#l(t)}};#a=()=>{this.#n(!0)};#c=()=>{this.#n()};#p=t=>{t.preventDefault(),this.#n()};#l(t){if(!this.#s||this.#t)return;this.#o=document.activeElement;const e=document.createElement(\"div\");e.append(this.#s.content.cloneNode(!0));const n=e.querySelector(\"dialog\"),i=n?.querySelector(\"figure\");if(!n||!i)return;const r={overflow:document.body.style.overflow,width:document.body.style.width},d=document.body.clientWidth;document.body.style.overflow=\"hidden\",document.body.style.width=`${d}px`,document.querySelector(\"header\")?.style.setProperty(\"padding-inline-end\",`calc(var(--sl-nav-pad-x) + ${window.innerWidth-d}px)`);const s=this.#f(t);t.classList.add(this.#e.source),s.classList.add(this.#e.image),i.append(s),this.#w(t.getAttribute(\"alt\"),i),document.body.append(e),document.addEventListener(\"wheel\",this.#c,{once:!0}),n.addEventListener(\"cancel\",this.#p),n.showModal(),w(()=>{s.style.transform=\"\",document.body.classList.add(this.#e.opened)}),this.#t={body:r,dialog:n,image:t,zoomedImage:s}}#n(t=!1){if(window.removeEventListener(\"wheel\",this.#c),!this.#t)return;const{zoomedImage:e}=this.#t;e.style.transform=e.dataset[this.#r]??\"\",document.body.classList.add(this.#e.transition),document.body.classList.remove(this.#e.opened);const{matches:n}=window.matchMedia(\"(prefers-reduced-motion: reduce)\");t||n?this.#h():e.addEventListener(\"transitionend\",this.#h,{once:!0})}#h=()=>{if(!this.#t)return;const{dialog:t,image:e}=this.#t;document.body.classList.remove(this.#e.transition),e.classList.remove(this.#e.source),t.parentElement?.remove(),document.body.style.overflow=this.#t.body.overflow,document.body.style.width=this.#t.body.width,document.querySelector(\"header\")?.style.setProperty(\"padding-inline-end\",\"var(--sl-nav-pad-x)\"),this.#t=void 0,this.#o instanceof HTMLElement&&this.#o.focus()};#w(t,e){if(Object.hasOwn(this.dataset,\"hideCaption\")||(t=t?.trim()??\"\",t.length===0))return;const n=document.createElement(\"figcaption\");n.ariaHidden=\"true\",n.textContent=t,e.append(n)}#f(t){const e=t.getBoundingClientRect(),n=this.#y(t),i=n?window.innerWidth:t.naturalWidth,r=n?window.innerHeight:t.naturalHeight,d=Math.min(window.innerWidth,i),s=Math.min(window.innerHeight,r),l=Math.min(d/i,s/r),a=(n?window.innerWidth:t.naturalWidth)*l,c=(n?window.innerHeight:t.naturalHeight)*l,h=(window.innerHeight-c)/2,u=(window.innerWidth-a)/2,o=t.cloneNode(!0);o.removeAttribute(\"id\"),o.style.position=\"absolute\",o.style.width=`${a}px`,o.style.height=`${c}px`,o.style.top=`${h}px`,o.style.left=`${u}px`,o.style.transform=\"\";const m=e.width/a,p=e.height/c,g=(-u+(e.width-a)/2+e.left)/m,v=(-h+(e.height-c)/2+e.top)/p;return o.style.transform=`scale(${m}, ${p}) translate3d(${g}px, ${v}px, 0)`,o.dataset[this.#r]=o.style.transform,t.parentElement?.tagName===\"PICTURE\"&&t.currentSrc&&(o.src=t.currentSrc),o}#y(t){return t.currentSrc.toLowerCase().endsWith(\".svg\")}});  Overview and the Cloudflare advantage\nCloudflare provides a complete suite of services around application performance, security, reliability, development, and zero trust. Cloudflare’s global network is approximately 50 ms away from about 95% of the Internet-connected population and consists of services that run on every server in every data center. The global scale of Cloudflare also allows for a robust threat intelligence source which is constantly fed back into Cloudflare security products to enhance the machine learning models and services even further.\nFigure 1: Cloudflare services run on every server in every data center\nOther differentiators include the fact that Cloudflare is not a point product unlike some vendors who only offer API security or zero trust services or specific performance/security services. Customers have started moving away from the point-product approach due to operational and management complexities, inefficiencies related to not being able to leverage cross-product innovation/integrations, and not being able to leverage scale of the network/resources across all services.\nFigure 2: Cloudflare Global Cloud Platform.\nAdditionally, customers do not want to be locked in to a specific cloud provider, but many performance and security vendors lock customers into their platform by focusing on and optimizing services to their own cloud and making it operationally difficult to adopt a multi-cloud strategy.\nCloudflare is agnostic to where the workloads run or what cloud provider is being used. Customers get the same consistent unified dashboard and operational simplicity whether workloads run in a specific cloud or on-premise. Unlike many vendors, taking advantage of cross-product innovations and integration does not depend on customers using a specific cloud for workloads.\nThis document demonstrates how easy it is to use Cloudflare’s collective services regardless of where workloads run. For the example in this document, an application workload will use Cloudflare DNS, CDN, WAF, and Access while also using Cloudflare Tunnel to connect securely to the Cloudflare network. It’s rare for a vendor to provide this comprehensive level of security capability in an operationally simple and consistent fashion.\nFor additional details and reference architectures on specific services, see our reference architecture documents.\nOnboarding and protecting the application with Cloudflare\nCloud-based security and performance providers like Cloudflare work as a reverse proxy. A reverse proxy is a server that sits in front of web servers and forwards client requests to those web servers. Reverse proxies are typically implemented to help increase security, performance, and reliability.\nNormal traffic flow without a reverse proxy would involve a client sending a DNS lookup request, receiving the origin IP address, and communicating directly to the origin server(s) ↗.\nWhen a reverse proxy is introduced, the client still sends a DNS lookup request to its resolver, which is the first stop in the DNS lookup. In some cases, the vendor providing the reverse proxy also provides DNS services; this is visualized in Figure 3 below. However, the client now communicates to the reverse proxy and the reverse proxy communicates to the origin server(s). This traffic flow, where all traffic passes through the reverse proxy, allows for additional application security, performance, and reliability services to be implemented easily for applications.\nFigure 3: Same vendor providing DNS and security/performance services via proxy.\nIn this example, we have a website running on one of the major cloud providers and we want to use Cloudflare DNS, CDN, WAF, and Access. We want to start with these services for demonstration purposes; customers can expand these to include other Cloudflare services as desired. Cloudflare provides the benefit of decoupling all services from the cloud provider and if we want to change cloud providers later or protect other applications running in other clouds, the dashboard and operations all stay consistent.\nCustomers can easily and securely connect their web application to the Cloudflare network and leverage application performance and security services. There are several connectivity options that fit different use cases.\nConnectivity options\nPublic connection over the Internet\nIn the most basic scenario, the Cloudflare proxy will route the request traffic over the Internet to the origin. In this setup the client and origin are both endpoints directly connected to the Internet via their respective ISPs. The request is routed over the Internet from the client to Cloudflare proxy (via DNS configuration) before the proxy routes the request over the Internet to the customer's origin.\nThe below diagram describes the default connectivity to origins as requests flow through the Cloudflare network. When a request for the origin resolves to an IP hosted by Cloudflare, that request is then handled by the Cloudflare network and forwarded onto the origin server over the public Internet.\nFigure 4: Connectivity from Cloudflare to origin server(s) via Internet\nThe origin is connected directly to the Internet and traffic is routed to the origin based on the IP address resolved by Cloudflare DNS. The DNS A record associates the domain name with the IP address of the origin server(s) or typically a load balancer the origin(s) are sitting behind.\nIn this model, when Cloudflare DNS receives a query for the A record, a Cloudflare anycast IP address is returned, so all traffic is routed through Cloudflare. However, unless additional precautions are taken, it’s possible for the origin to be reached directly bypassing Cloudflare if someone knows the IP address of the origin(s).\nAdditionally, in this model, the customer has to open firewall rules for the origin(s) or web server(s) so they can be accessible on the respective http/https ports. However, customers can choose to leverage Cloudflare Aegis, which allocates customer-specific IPs that Cloudflare will use to connect back to your origins. We recommend allowlisting traffic from only these networks to avoid direct access.\nIn addition to IP blocking at the origin-side firewall, we also strongly recommend additional verification of traffic via either the \"Full (Strict)\" SSL setting or mTLS auth to ensure all traffic is sourced from requests passing through the customer configured zones.\nCloudflare also supports Bring Your Own IP (BYOIP). When BYOIP is configured, the Cloudflare global network will announce a customer’s own IP prefixes and the prefixes can be used with the respective Cloudflare Layer 7 services. This allows customers to proxy traffic through Cloudflare and still have the customer IP address returned in the DNS resolution. This can be beneficial ↗ for cases where the customer IP prefixes are already allow-listed and updating firewall rules is not desirable or present an administrative hurdle.\nPrivate connection over the Internet - Tunnel\nThe recommended option when connecting origin(s) over the Internet is to have a private tunnel/connection over the Internet for additional security.\nA traditional VPN setup is not optimal due to backhauling traffic to a centralized VPN gateway location which then connects back to the origin; this negatively impacts end-to-end throughput and latency. Cloudflare offers Cloudflare Tunnel software that provides an encrypted tunnel between your origin(s) and Cloudflare’s network. Also, since Cloudflare leverages anycast on its global network, the origin(s) will, like clients, connect to the closest Cloudflare data center(s) and therefore optimize the end-to-end latency and throughput.\nWhen you run a tunnel, a lightweight daemon in your infrastructure, cloudflared, establishes four outbound-only connections between the origin server and the Cloudflare network. These four connections are made to four different servers spread across at least two distinct data centers providing robust resiliency. It is possible to install many cloudflared instances to increase resilience between your origin servers and the Cloudflare network.\nCloudflared creates an encrypted tunnel between your origin web server(s) and Cloudflare’s nearest data center(s), without the need for opening any public inbound ports. This provides for simplicity and speed of implementation as there are no security changes needed on the firewall. This solution also lowers the risk of firewall misconfigurations which could leave your company vulnerable to attacks.\nThe firewall and security posture is hardened by locking down all origin server ports and protocols via your firewall. Once Cloudflare Tunnel is in place and respective security applied, all requests on HTTP/S ports are dropped, including volumetric DDoS attacks. Data breach attempts, such as snooping of data in transit or brute force login attacks, are blocked entirely.\nFigure 5: Connectivity from Cloudflare to origin server(s) via Cloudflare Tunnel\nThe above diagram describes the connectivity model through Cloudflare Tunnel. This option provides you with a secure way to connect your resources to Cloudflare without a publicly routable IP address. Cloudflare Tunnel can connect HTTP web servers, SSH servers, remote desktops, and other protocols safely to Cloudflare.\nDirect connection - Cloudflare Network Interconnect (CNI)\nMost vendors also provide an option of directly connecting to their network. Direct connections provide security, reliability, and performance benefits over using the public Internet. These direct connections are done at peering facilities, Internet exchanges (IXs) where Internet service providers (ISPs) and Internet networks can interconnect with each other, or through vendor partners.\nFigure 6: Connectivity from Cloudflare to origin server(s) via Cloudflare Network Interconnect (CNI)\nThe above diagram describes origin connectivity through Cloudflare Network Interconnect (CNI) ↗ which allows you to connect your network infrastructure directly with Cloudflare and communicate only over those direct links. CNI allows customers to interconnect branch and headquarter locations directly with Cloudflare. Customers can interconnect with Cloudflare in one of three ways: over a private network interconnect (PNI) available at Cloudflare peering facilities ↗, via an IX at any of the many global exchanges Cloudflare participates in ↗, or through one of Cloudflare’s interconnection platform partners ↗.\nCloudflare’s global network allows for ease of connecting to the network regardless of where your infrastructure and employees are.\nRouting to the origin\nRegardless of which connectivity model is used, DNS resolution is done first and provides Cloudflare the information of where to route to. Cloudflare can support configurations as an authoritative DNS provider, secondary DNS provider, or non-Cloudflare DNS (CNAME) setups for a zone. For Cloudflare performance and security services to be applied, the traffic must be routed to the Cloudflare network.\nExample: Securing your application with Cloudflare Tunnel and Access\nSecuring connectivity with Cloudflare Tunnel\nAlthough there are multiple ways to onboard an application to use Cloudflare services, a common approach is to use Cloudflare DNS as the primary authoritative DNS. The additional benefit for customers here is that Cloudflare is consistently ranked the fastest available authoritative DNS provider globally ↗.\nIn this example, we’ll connect our origin server to Cloudflare securely with Cloudflare Tunnel. You can configure DNS in the dashboard and enter the site you want to onboard. You’ll receive a pair of Cloudflare nameservers to configure at your domain registrar’s site. Once that’s completed, Cloudflare becomes the primary authoritative DNS provider.\nIf Cloudflare is configured for just routing over the Internet, the DNS configuration would look something like below, where the A record points to the IP address of the origin server or respective load balancer. As Cloudflare is acting as a reverse proxy, the status shows as Proxied.\" As is, Cloudflare is still acting as a reverse proxy so all the Cloudflare services such as CDN, WAF, and Access can be used.\nFigure 7: DNS configuration for 'cftestsite3.com' - pointing to IP address of origin or load balancer.\nWe can also use Cloudflare Tunnel over the Internet to provide for more security and to prevent the need for opening any inbound firewall rules to the origin(s). In this way, instead of an A record in the DNS configuration, we will have a CNAME record pointing to the tunnel we deploy. Here we deploy a tunnel from the origin to the Cloudflare network, and the DNS will automatically be configured. A CNAME record that points to the tunnel will be created; this enforces all traffic going to the origin(s) be routed over the Cloudflare Tunnel.\nTo create and manage tunnels, you need to install and authenticate cloudflared on your origin server. cloudflared is what connects your server to Cloudflare’s global network.\nThere are two options for creating a tunnel - via the dashboard or via the command line. It’s recommended getting started with the dashboard, since it will allow you to manage the tunnel from any machine.\nA remotely-managed tunnel only requires the tunnel token to run. Anyone with access to the token will be able to run the tunnel. You can get a tunnel’s token from the dashboard or via the API as shown below. The command provided in the dashboard will install and configure cloudflared to run as a service using an auth token.\nIn the Cloudflare dashboard, navigate to Zero Trust > Access > Tunnels. Select the \"Create a tunnel\" button, name the tunnel, and save.\nFigure 8: Cloudflare Tunnel Creation.\nNext, you’ll be presented with a screen where you select the operating system (OS) of your origin server. You will then be provided a CLI command that you can run on your origin that will automatically download and install the Cloudflare Tunnel software.\nFigure 9: Instructions to install and run a connector.\nBelow, the CLI command has been run to download and install the Cloudflare Tunnel software.\nFigure 10: Downloading and installing Cloudflare Tunnel\nThe connector will now automatically be displayed as connected.\nFigure 11: Cloudflare Tunnel Connectors showing in dashboard.\nIn the dashboard, you can now continue with the next step which is to create the tunnel and map it to a service on the origin as shown below. In this case, all HTTPS traffic will be sent over the tunnel to the origin server.\nFigure 12: Cloudflare Tunnel Configuration.\nYou can now see in the dashboard that the tunnel has been created and is healthy.\nFigure 13: Cloudflare Tunnel is created and healthy.\nFurther, if we look at the DNS configuration, we can see a DNS record was automatically created pointing to the tunnel ID. When you create a tunnel, Cloudflare generates a subdomain of cfargotunnel.com with the UUID of the created tunnel. Unlike publicly routable IP addresses, the subdomain will only proxy traffic for a DNS record in the same Cloudflare account. It’s not possible for another user to create a DNS record in another account or system to proxy traffic over this tunnel.\nFigure 14: Cloudflare DNS CNAME record automatically created\nWe now have secure application access. Users can only access the application through the tunnel connected to the Cloudflare network. Further, since Tunnel uses outbound connections to Cloudflare and any return traffic from an outbound connection will be allowed, no inbound firewall rule is required creating less overhead and more operational simplicity.\nIf you were to deploy the tunnel via CLI, after the tunnel install, you would also need to authenticate cloudflared on the origin server. cloudflared is what connects the server to Cloudflare’s global network. This authentication can be done with the cloudflared tunnel login command as shown below.\nFigure 15: Authenticating cloudflared on the origin server.\nYou’ll be asked to select the zone you want to add the tunnel to as shown below.\nFigure 16: Adding Cloudflare Tunnel to a selected zone.\nNext, you’ll authorize the tunnel for the zone.\nFigure 17: Authorizing the tunnel for a zone.\nFinally, you should receive confirmation that a certificate has been installed allowing your origin to create a tunnel on the respective zone.\nFigure 18: Confirmation that certificate has been successfully installed.\nSecuring the application with Cloudflare Access\nThe current setup as described prior in this document is shown below, where the origin server(s) are connected to the Cloudflare network via Tunnel. Now, we can start to consume Cloudflare services.\nFigure 19: Web app securely connected to Cloudflare network for performance and security services.\nCurrently the origin is only accessible via Cloudflare Tunnel. Because a public hostname is used, access to the origin is public. The application is secured behind Cloudflare and protected from DDoS and other types of attacks. For additional security, Cloudflare Access can be used to place a layer of authentication and access controls in front of the tunneled application. Access enforces an authentication step before requests to the origin can be served. Many other identity, device and network attributes can be used in the policy, allowing customers to define access beyond just authentication. For example, customers can define the network the request originates from, as well as ensuring the user device is running the latest operating system.\nBelow, you can see an application has been created for cftestsite3.com.\nFigure 20: Cloudflare Access Policy Configuration.\nLooking at policy configuration below you can see it requires users to be part of the \"Secure Employees\" Access group.\nFigure 21 : Access group assigned to the application.\nIf we take a deeper look at the \"Secure Employees\" Access group, it can be seen below that members are from the company’s Okta identity provider (IdP) group called \"Employees.\" Further, the Access group is enforcing multi-factor authentication (MFA).\nFigure 22 : Access group configuration with defined group criteria.\nLooking at the \"Image and Video Gallery\" application, under \"Authentication,\" customers can also manually select identity providers users can use to connect to this application.\nFigure 23 : Manually selecting identity providers users can use.\nWe now have secure application access to the origin(s) via Tunnel and also authentication and access policies to the application via Access. When users try to access the site, they are greeted with a Cloudflare Access page asking users to authenticate with the configured IdP; the page can be customized to customer’s liking as shown below.\nFigure 24 : Sign-in via IdP configured in Access.\nUsing other Cloudflare services (CDN, WAF, Security Analytics, etc.)\nIn the current setup, the origin server(s) are securely connected to the Cloudflare network via Cloudflare Tunnel and Cloudflare Access via policies enforcing authentication and other security requirements.\nSince Cloudflare is already set up and acting as a reverse proxy for the site, traffic is being directed through Cloudflare, so all Cloudflare services can easily be leveraged including CDN, Security Analytics, WAF, API Gateway, Bot Management, Page Shield for client-side security, etc.\nWhen a DNS lookup request is made by a client for the respective website, in this case \"cftestsite3.com,\" Cloudflare returns an anycast IP address, so all traffic is directed to the closest data center where all services will be applied before the request is forwarded over Cloudflare Tunnel to the origin server(s).\nCloudflare CDN leverages Cloudflare’s global anycast edge network. In addition to using anycast for network performance and resiliency, the Cloudflare CDN leverages Argo Tiered Cache to deliver optimized results while saving costs for customers. Customers can also enable Argo Smart Routing to find the fastest network path to route requests to the origin server. As shown below, the Cloudflare CDN is now caching content globally and granular CDN policies to affect default behavior can be applied.\nFigure 25 : Cloudflare Caching Analytics.\nThere are different caching topologies and configurations available. Below, you can see a Cache Rule has been configured to cache requests to the domain and override the origin TTL.\nFigure 26 : Cloudflare rule configuration.\nCloudflare Cache Reserve has also been enabled by clicking the \"Enable storage sync\" button under \"Caching > Cache Reserve\" in the dashboard. Cache Reserve leverages Cloudflare’s persistent object storage, R2, to eliminate egress costs from other public cloud providers. It improves cache hit ratios by enabling customers to persistently cache data with the push of a single button.\nFigure 27 : Cloudflare Cache Reserve.\nAdditionally, as shown below, Cloudflare Security Analytics brings together all of Cloudflare’s detection capabilities and provides a global view and important insights for all traffic going to the respective site. As traffic is being routed through the Cloudflare network, Cloudflare has visibility into threats and insights which are exposed to customers in the dashboard, logs, and reporting.\nFigure 28 : Cloudflare Security Analytics.\nCloudflare WAF rules can be applied to enforce policies on traffic inline. Below a firewall policy is in place to log all traffic with a bot score of < 30 and WAF attack score < 50. A bot score of < 30 signifies all traffic that’s classified as either automated or likely automated and a WAF attack score < 50 signifies all traffic that’s classified as either malicious or likely malicious.\nFigure 29 : Cloudflare WAF.\nCloudflare WAF allows for granular policies that can leverage many different request criteria including header information. Customers can take a variety of actions including logging, blocking, and challenge.\nFigure 30 : Cloudflare WAF Rule Configuration.\nCustomers can use WAF to implement and use custom rules, rate limiting rules, and managed rules. A brief description of each is provided below.\n\nWAF Custom Rules: provides ability to create custom rules based on different request attributes and header information to block any threat\nWAF Rate Limiting Rules: prevents abuse, DDoS, brute force attempts, and provides for API-centric controls.\nWAF Managed Rules\n\nCloudflare Managed Ruleset: provides advanced zero-day vulnerability protection\nCloudflare OWASP Core Ruleset: block common web application vulnerabilities, some of which are in OWASP top 10\nCloudflare Leaked Credential Check: checks exposed credential database for popular content management system (CMS) applications\n\n\n\nThe same methodology applies for all other Cloudflare Application Performance and Security products (API Gateway, Bot Management, etc.): once configured to route traffic through the Cloudflare network, customers can start leveraging the Cloudflare services. Figure 31 displays Cloudflare’s Bot Analytics which categorizes the traffic based on bot score, shows the bot score distribution, and other bot analytics. All of the request data is captured inline and all enforcement based on defined policies is also done inline.\nFigure 31 : Cloudflare Bot Management - Bot Analytics.\nSummary\nCloudflare offers comprehensive application performance and security services. Customers can easily onboard and start using all performance and security services by routing traffic to their origin server(s) through Clooudflare’s network. Additionally, Cloudflare offers multiple connectivity options including Cloudflare Tunnel for securely connecting origin server(s) to Cloudflare’s network.     Was this helpful?   Yes      No        What did you like?     Accurate    Easy to understand    Solved my problem    Helped me decide to use the product    Other        What went wrong?     Hard to understand    Incorrect information    Missing the information    Other        Thank you for helping improve Cloudflare's documentation!    class r extends HTMLElement{connectedCallback(){const d={'[data-icon=\"material-symbols:thumb-up-outline-rounded\"]':\"#feedback-yes\",'[data-icon=\"material-symbols:thumb-down-outline-rounded\"]':\"#feedback-no\"},s=this.querySelector(\"#feedback-thumbs\"),o=this.querySelector(\"#feedback-thanks\");if(!(!s||!o))for(const[i,n]of Object.entries(d))this.querySelector(i)?.addEventListener(\"click\",()=>{s.classList.add(\"hidden\");const e=this.querySelector(n);if(!e)return;e.classList.remove(\"hidden\");const a=e.querySelector(\"form\");a&&a.addEventListener(\"submit\",async c=>{c.preventDefault();const t=new FormData(c.target);t.set(\"page\",window.location.pathname),t.set(\"option\",n.split(\"-\")[1]),fetch(\"https://feedback.developers.cloudflare.com\",{method:\"POST\",body:t}),e.classList.add(\"hidden\"),o.classList.remove(\"hidden\")})})}}customElements.define(\"feedback-prompt\",r);       Edit page          Cloudflare DashboardDiscordCommunityLearning CenterSupport Portal\n\t\t\t\tfunction OptanonWrapper() {}\n\t\t\t  Cookie Settings",
  "custom_id": "uYhvfkKJg71lKZjDKWXnvHGaAabk5Co8r93zD0abRjaaroEcODutfZJ0z0QSlBEg"
}