{
  "url": "https://developers.cloudflare.com/cloudflare-one/identity/authorization-cookie/cors/#_top",
  "title": "CORS - Cloudflare Zero Trust docsYesNoYesNo",
  "keyword": "",
  "content": "Skip to content          Cloudflare Docs            Search            Products  Learning  Status  Support  Log in   GitHub X YouTube       Select theme    DarkLightAuto        \n\tStarlightThemeProvider.updatePickers();\n const r=\"starlight-theme\",o=e=>e===\"auto\"||e===\"dark\"||e===\"light\"?e:\"auto\",c=()=>o(typeof localStorage<\"u\"&&localStorage.getItem(r));function n(e){typeof localStorage<\"u\"&&localStorage.setItem(r,e===\"light\"||e===\"dark\"?e:\"\")}const l=()=>matchMedia(\"(prefers-color-scheme: light)\").matches?\"light\":\"dark\";function t(e){StarlightThemeProvider.updatePickers(e),document.documentElement.dataset.theme=e===\"auto\"?l():e,n(e)}matchMedia(\"(prefers-color-scheme: light)\").addEventListener(\"change\",()=>{c()===\"auto\"&&t(\"auto\")});class s extends HTMLElement{constructor(){super(),t(c()),this.querySelector(\"select\")?.addEventListener(\"change\",a=>{a.currentTarget instanceof HTMLSelectElement&&t(o(a.currentTarget.value))})}}customElements.define(\"starlight-theme-select\",s); class n extends HTMLElement{constructor(){super();const e=this.querySelector(\"select\");e&&e.addEventListener(\"change\",t=>{t.currentTarget instanceof HTMLSelectElement&&(window.location.pathname=t.currentTarget.value)})}}customElements.define(\"starlight-lang-select\",n);           class s extends HTMLElement{constructor(){super(),this.btn=this.querySelector(\"button\"),this.btn.addEventListener(\"click\",()=>this.toggleExpanded());const t=this.closest(\"nav\");t&&t.addEventListener(\"keyup\",e=>this.closeOnEscape(e))}setExpanded(t){this.setAttribute(\"aria-expanded\",String(t)),document.body.toggleAttribute(\"data-mobile-menu-expanded\",t)}toggleExpanded(){this.setExpanded(this.getAttribute(\"aria-expanded\")!==\"true\")}closeOnEscape(t){t.code===\"Escape\"&&(this.setExpanded(!1),this.btn.focus())}}customElements.define(\"starlight-menu-button\",s);              Cloudflare Zero Trust      \n\t\t(() => {\n\t\t\ttry {\n\t\t\t\tif (!matchMedia('(min-width: 50em)').matches) return;\n\t\t\t\t/** @type {HTMLElement | null} */\n\t\t\t\tconst target = document.querySelector('sl-sidebar-state-persist');\n\t\t\t\tconst state = JSON.parse(sessionStorage.getItem('sl-sidebar-state') || '0');\n\t\t\t\tif (!target || !state || target.dataset.hash !== state.hash) return;\n\t\t\t\twindow._starlightScrollRestore = state.scroll;\n\t\t\t\tcustomElements.define(\n\t\t\t\t\t'sl-sidebar-restore',\n\t\t\t\t\tclass SidebarRestore extends HTMLElement {\n\t\t\t\t\t\tconnectedCallback() {\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\tconst idx = parseInt(this.dataset.index || '');\n\t\t\t\t\t\t\t\tconst details = this.closest('details');\n\t\t\t\t\t\t\t\tif (details && typeof state.open[idx] === 'boolean') details.open = state.open[idx];\n\t\t\t\t\t\t\t} catch {}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t} catch {}\n\t\t})();\n\t     Overview     Get started        Implementation guides         Secure your Internet traffic and SaaS apps ↗     Replace your VPN ↗     Deploy Zero Trust Web Access ↗            Identity         Overview     One-time PIN login        Device posture         Overview        WARP client checks         Overview     Application check     Carbon Black     Client certificate     Device serial numbers     Device UUID     Disk encryption     Domain joined     File check     Firewall     OS version     Require Gateway     Require WARP     SentinelOne            Service providers         Overview     CrowdStrike     Kolide     Microsoft Endpoint Manager     SentinelOne     Tanium     Uptycs     Workspace ONE            Access integrations         Overview     Mutual TLS     Tanium                User management         Overview     Access groups     Session management     Seat management     SCIM provisioning         Service tokens        Authorization cookie         Overview     Validate JWTs     Application token     CORS            SSO integration         Overview     Generic OIDC     Generic SAML 2.0     Active Directory (SAML)     Amazon Cognito     AWS IAM (SAML)     Centrify     Centrify (SAML)     Citrix ADC (SAML)     Facebook     GitHub     Google     Google Workspace     JumpCloud (SAML)     Keycloak (SAML)     LinkedIn     Microsoft Entra ID     Okta     Okta (SAML)     OneLogin     OneLogin (SAML)     PingFederate     PingOne     PingOne (SAML)     Signed AuthN requests (SAML)     Yandex                Connections         Overview        Cloudflare Tunnel         Overview        Get started         Overview     Create a remotely-managed tunnel (dashboard)     Create a locally-managed tunnel (CLI)     Useful terms            Downloads         Overview     Update cloudflared     License     Copyrights            Configure a tunnel         Overview     Remotely-managed tunnel        Locally-managed tunnel         Overview     Configuration file        Run as a service         Overview     Linux     macOS     Windows         Useful commands     Tunnel permissions         Origin configuration     Tunnel run parameters            Deploy a tunnel         Overview     Tunnel with firewall     Tunnel availability and failover     System requirements        Environments         Overview     Ansible     AWS     Azure     GCP     Kubernetes     Terraform                Use cases         Overview        SSH         Overview     SSH with Access for Infrastructure New     Self-managed SSH keys     Browser-rendered SSH terminal     SSH with client-side cloudflared         RDP     SMB     gRPC            Private networks         Overview        Connect private networks         Overview     Private DNS     Virtual networks     Load balancing         Peer-to-peer connectivity        WARP Connector         Overview Beta     Site-to-Internet     Site-to-site     User-to-site     VPC deployments                Public hostnames         Overview     DNS records     Load balancing            Monitor tunnels         Overview     Logs     Notifications     Metrics            Troubleshoot tunnels         Overview     Private network connectivity     Common errors            Do more with Tunnel         Overview     Migrate legacy tunnels     Quick Tunnels                Connect devices         Overview        WARP         Overview     First-time setup        Download WARP         Overview     Update WARP     Migrate 1.1.1.1 app            User-side certificates         Overview     Install certificate using WARP     Install certificate manually     Deploy custom certificate            Deploy WARP         Overview        Managed deployment         Overview        Partners         Overview     Fleet     Hexnode     Intune     Jamf     JumpCloud     Kandji         Parameters     Connect WARP before Windows login     Switch between Zero Trust organizations         Manual deployment     Device enrollment permissions     WARP with firewall     WARP with legacy VPN            Configure WARP         Overview     Device profiles        WARP modes         Overview     Enable Device Information Only            WARP settings         Overview     Captive portal detection         Managed networks        Route traffic         Overview     Local Domain Fallback     Split Tunnels     WARP architecture         WARP sessions            Troubleshoot WARP         Overview     Common issues     Client errors     Diagnostic logs     Known limitations         Remove WARP            Agentless options         Overview        DNS            Locations         Add locations     DNS resolver IPs and hostnames         DNS over TLS (DoT)     DNS over HTTPS (DoH)         HTTP                    Applications         Overview        Add web applications         Overview        SaaS applications         Overview     Generic OIDC application Beta     Generic SAML application     Adobe Acrobat Sign     Area 1     Asana     Atlassian Cloud     AWS     Braintree     Coupa     Digicert     DocuSign     Dropbox     GitHub Enterprise Cloud     Google Cloud     Google Workspace     Grafana     Grafana Cloud     Greenhouse Recruiting     Hubspot     Ironclad     Jamf Pro     Miro     PagerDuty     Pingboard     Salesforce (OIDC)     Salesforce (SAML)     ServiceNow (OIDC)     ServiceNow (SAML)     Slack     Smartsheet     SparkPost     Tableau Cloud     Workday     Zendesk     Zoom         Self-hosted applications     Cloudflare dashboard SSO application            Non-HTTP applications         Overview     Add an infrastructure application New     Browser-rendered terminal        Client-side cloudflared         Overview     Enable automatic cloudflared authentication     Arbitrary TCP         Short-lived certificates (legacy)            Scan SaaS applications         Overview     Manage findings        Available integrations         Overview     Amazon Web Services (AWS) S3     Atlassian Confluence     Atlassian Jira     Bitbucket Cloud     Box     Dropbox     GitHub        Google Workspace         Overview     Google Drive     Gmail     Google Admin     Google Calendar            Microsoft 365         Overview     Admin Center     OneDrive     SharePoint     Outlook         Salesforce     ServiceNow     Slack         Scan for sensitive data     Troubleshoot integrations         Login page     Block page     Add bookmarks     App Launcher            Policies         Overview        Secure Web Gateway         Overview        Get started         DNS filtering     Network filtering     HTTP filtering            DNS policies         Overview     Common policies     Test DNS filtering     Timed DNS policies            Network policies         Overview     Common policies     Protocol detection     SSH proxy and command logs            HTTP policies         Overview     Common policies     TLS decryption     HTTP/3     Tenant control     AV scanning     File sandboxing     WebSocket traffic            Egress policies         Overview     Dedicated egress IPs         Resolver policies Beta     Global policies     Applications and app types     Domain categories     Identity-based policies     Block page     Order of enforcement     Lists     Proxy            Access         Overview     Manage Access policies     Require Purpose Justification     External Evaluation rules     Isolate self-hosted application     Application paths     Enforce MFA     Temporary authentication            Browser Isolation         Overview        Set up Browser Isolation         Get started     Clientless Web Isolation     Non-identity on-ramps         Isolation policies     Extensions     Accessibility     Browser Isolation with firewall     Known limitations            Data Loss Prevention         Overview        Scan HTTP traffic         Create DLP policies     Common policies     Logging options         Scan SaaS apps ↗        DLP profiles         Configure DLP profiles     Predefined profiles     Integration profiles     Profile settings         DLP datasets                Insights            Analytics         Shadow IT Discovery     Gateway analytics            Email monitoring         Overview     Search email     Phishing report     Phish submissions            Digital Experience Monitoring         Overview Beta     Fleet status        Tests         Overview     HTTP test     Traceroute test     View test results         Remote captures     Notifications            Logs         Overview     User logs     Access audit logs        Gateway activity logs         Overview     Manage PII         Tunnel audit logs     Posture logs     Logpush integration         Risk score            Email Security         Overview        Setup         Overview        Post-delivery deployment            API deployment         Overview     Set up with Microsoft 365            BCC/Journaling            BCC setup         Microsoft Exchange BCC setup            Journaling setup         Office 365 journaling setup     Manually add domains     Manage domains                        Directories         Overview        Manage Microsoft directories         Overview     Manage groups in your directory     Manage users in your directory         Manage Email Security directories            Detection settings         Overview     Allow policies     Blocked senders     Trusted domains     Impersonation registry     Additional detections         Auto-move events     PhishGuard     Outbound Data Loss Prevention (DLP)        Reference         How Email Security detects phish     Information about your domain     Dispositions and attributes                API and Terraform         Overview        Access API examples         Overview     Access group     Any valid service token     Authentication method     Common name     Country Code     Email     Email domain     Everyone     G Suite Group     GitHub™ Organization     IP range     Microsoft Entra Group     mTLS certificate     Okta Group     SAML Attribute     Service token            Gateway API examples         Overview     DNS policy     Network policy     HTTP policy         Scoped API tokens     Terraform         Reference architecture ↗     Tutorials     Account limits     Roles and permissions     Glossary        Changelog         Overview     Access     Browser Isolation     CASB     Cloudflare Tunnel     Data Loss Prevention     Digital Experience Monitoring     Email Security     Gateway     Risk score     Zero Trust WARP Client         FAQ       \n\t\t(() => {\n\t\t\tconst scroller = document.getElementById('starlight__sidebar');\n\t\t\tif (!window._starlightScrollRestore || !scroller) return;\n\t\t\tscroller.scrollTop = window._starlightScrollRestore;\n\t\t\tdelete window._starlightScrollRestore;\n\t\t})();\n\t        Products  Learning  Status  Support  Log in   GitHub X YouTube       Select theme    DarkLightAuto        \n\tStarlightThemeProvider.updatePickers();\n            const a=document.getElementById(\"starlight__sidebar\"),n=a?.querySelector(\"sl-sidebar-state-persist\"),o=\"sl-sidebar-state\",i=()=>{let t=[];const e=n?.dataset.hash||\"\";try{const s=sessionStorage.getItem(o),r=JSON.parse(s||\"{}\");Array.isArray(r.open)&&r.hash===e&&(t=r.open)}catch{}return{hash:e,open:t,scroll:a?.scrollTop||0}},c=t=>{try{sessionStorage.setItem(o,JSON.stringify(t))}catch{}},d=()=>c(i()),l=(t,e)=>{const s=i();s.open[e]=t,c(s)};n?.addEventListener(\"click\",t=>{if(!(t.target instanceof Element))return;const e=t.target.closest(\"summary\")?.closest(\"details\");if(!e)return;const s=e.querySelector(\"sl-sidebar-restore\"),r=parseInt(s?.dataset.index||\"\");isNaN(r)||l(!e.open,r)});addEventListener(\"visibilitychange\",()=>{document.visibilityState===\"hidden\"&&d()});addEventListener(\"pageHide\",d);    On this page    Overview     Allow simple requests     Authenticate manually        Allow preflighted requests     Bypass OPTIONS requests to origin     Configure response to preflight requests        Send authentication token with Cloudflare Worker     Prerequisites     1. Generate a service token     2. Add a Service Auth policy     3. Create a new Worker     4. Configure the Worker     5. Update HTTP request URLs        Troubleshooting     On this page   Overview     Allow simple requests     Authenticate manually        Allow preflighted requests     Bypass OPTIONS requests to origin     Configure response to preflight requests        Send authentication token with Cloudflare Worker     Prerequisites     1. Generate a service token     2. Add a Service Auth policy     3. Create a new Worker     4. Configure the Worker     5. Update HTTP request URLs        Troubleshooting         Was this helpful?   Yes      No        What did you like?     Accurate    Easy to understand    Solved my problem    Helped me decide to use the product    Other        What went wrong?     Hard to understand    Incorrect information    Missing the information    Other        Thank you for helping improve Cloudflare's documentation!                    Products        …       Cloudflare Zero Trust        Identity        Authorization cookie        CORS        {\"@context\":\"https://schema.org\",\"@type\":\"BreadcrumbList\",\"itemListElement\":[{\"@type\":\"ListItem\",\"position\":1,\"item\":{\"@id\":\"/products/\",\"name\":\"Products\"}},{\"@type\":\"ListItem\",\"position\":2,\"item\":{\"@id\":\"/cloudflare-one/\",\"name\":\"Cloudflare Zero Trust\"}},{\"@type\":\"ListItem\",\"position\":3,\"item\":{\"@id\":\"/cloudflare-one/identity/\",\"name\":\"Identity\"}},{\"@type\":\"ListItem\",\"position\":4,\"item\":{\"@id\":\"/cloudflare-one/identity/authorization-cookie/\",\"name\":\"Authorization cookie\"}},{\"@type\":\"ListItem\",\"position\":5,\"item\":{\"@id\":\"/cloudflare-one/identity/authorization-cookie/cors/\",\"name\":\"CORS\"}}]} class t extends HTMLElement{constructor(){super(),this.isManualToggle=!1,this.breadcrumbs=null,this.mainBemClass=null,this.totalWidth=0,this.resizeObserver=null,this.handleTruncatedButtonClick=()=>{this.breadcrumbs?.classList.remove(\"is-truncated\"),this.isManualToggle=!0},this.mainBemClass=this.dataset.mainBemClass||null;const e=this.dataset.id;!(\"truncated\"in this.dataset)||!e||(this.breadcrumbs=document.getElementById(e),this.initializeCrumbs(),this.setupResizeObserver())}initializeCrumbs(){this.breadcrumbs?.querySelectorAll(`.${this.mainBemClass}__crumb`)?.forEach(s=>{this.totalWidth+=s.offsetWidth})}setupResizeObserver(){this.resizeObserver=new ResizeObserver(e=>{e.forEach(s=>{this.checkOverflow(s.target.clientWidth)})}),this.breadcrumbs&&this.resizeObserver.observe(this.breadcrumbs)}connectedCallback(){this.showHiddenCrumbs()}disconnectedCallback(){this.resizeObserver&&this.breadcrumbs&&(this.resizeObserver.unobserve(this.breadcrumbs),this.resizeObserver.disconnect())}toggleTruncated(e){this.breadcrumbs?.classList.toggle(\"is-truncated\",e)}showHiddenCrumbs(){const e=this.breadcrumbs?.querySelector(`.${this.mainBemClass}__truncated-button`);e?.removeEventListener(\"click\",this.handleTruncatedButtonClick),e?.addEventListener(\"click\",this.handleTruncatedButtonClick.bind(this))}checkOverflow(e){const s=this.totalWidth>e&&!this.isManualToggle;this.toggleTruncated(s),s||(this.isManualToggle=!1)}}customElements.get(\"astro-breadcrumbs\")||customElements.define(\"astro-breadcrumbs\",t);CORS                             const L=\"starlight-image-zoom-zoomable\",w=window.requestIdleCallback??(y=>setTimeout(y,1));customElements.define(\"starlight-image-zoom\",class f extends HTMLElement{#t;#i=[];#o;#s=this.querySelector(\"template\");#e={image:\"starlight-image-zoom-image\",opened:\"starlight-image-zoom-opened\",source:\"starlight-image-zoom-source\",transition:\"starlight-image-zoom-transition\"};#r=\"zoomTransform\";static#u=!1;constructor(){super();const t=()=>{w(()=>{const e=[...document.querySelectorAll(L)];e.length!==0&&(this.#m(e),document.addEventListener(\"click\",this.#d),window.addEventListener(\"resize\",this.#a))})};window.addEventListener(\"DOMContentLoaded\",t,{once:!0}),document.addEventListener(\"astro:after-preparation\",()=>{document.removeEventListener(\"click\",this.#d),window.removeEventListener(\"resize\",this.#a)},{once:!0}),f.#u||=document.addEventListener(\"astro:after-swap\",t)===void 0}#m(t){for(const e of t){const n=e.querySelector(\"img\");n&&(this.#i.push(n),e.querySelector(\"button\")?.addEventListener(\"click\",i=>{i.stopPropagation(),this.#l(n)}))}}#d=({target:t})=>{if(!(t instanceof HTMLElement&&t.closest(\"figcaption\"))){if(this.#t){this.#n();return}t instanceof HTMLImageElement&&this.#i.includes(t)&&this.#l(t)}};#a=()=>{this.#n(!0)};#c=()=>{this.#n()};#p=t=>{t.preventDefault(),this.#n()};#l(t){if(!this.#s||this.#t)return;this.#o=document.activeElement;const e=document.createElement(\"div\");e.append(this.#s.content.cloneNode(!0));const n=e.querySelector(\"dialog\"),i=n?.querySelector(\"figure\");if(!n||!i)return;const r={overflow:document.body.style.overflow,width:document.body.style.width},d=document.body.clientWidth;document.body.style.overflow=\"hidden\",document.body.style.width=`${d}px`,document.querySelector(\"header\")?.style.setProperty(\"padding-inline-end\",`calc(var(--sl-nav-pad-x) + ${window.innerWidth-d}px)`);const s=this.#f(t);t.classList.add(this.#e.source),s.classList.add(this.#e.image),i.append(s),this.#w(t.getAttribute(\"alt\"),i),document.body.append(e),document.addEventListener(\"wheel\",this.#c,{once:!0}),n.addEventListener(\"cancel\",this.#p),n.showModal(),w(()=>{s.style.transform=\"\",document.body.classList.add(this.#e.opened)}),this.#t={body:r,dialog:n,image:t,zoomedImage:s}}#n(t=!1){if(window.removeEventListener(\"wheel\",this.#c),!this.#t)return;const{zoomedImage:e}=this.#t;e.style.transform=e.dataset[this.#r]??\"\",document.body.classList.add(this.#e.transition),document.body.classList.remove(this.#e.opened);const{matches:n}=window.matchMedia(\"(prefers-reduced-motion: reduce)\");t||n?this.#h():e.addEventListener(\"transitionend\",this.#h,{once:!0})}#h=()=>{if(!this.#t)return;const{dialog:t,image:e}=this.#t;document.body.classList.remove(this.#e.transition),e.classList.remove(this.#e.source),t.parentElement?.remove(),document.body.style.overflow=this.#t.body.overflow,document.body.style.width=this.#t.body.width,document.querySelector(\"header\")?.style.setProperty(\"padding-inline-end\",\"var(--sl-nav-pad-x)\"),this.#t=void 0,this.#o instanceof HTMLElement&&this.#o.focus()};#w(t,e){if(Object.hasOwn(this.dataset,\"hideCaption\")||(t=t?.trim()??\"\",t.length===0))return;const n=document.createElement(\"figcaption\");n.ariaHidden=\"true\",n.textContent=t,e.append(n)}#f(t){const e=t.getBoundingClientRect(),n=this.#y(t),i=n?window.innerWidth:t.naturalWidth,r=n?window.innerHeight:t.naturalHeight,d=Math.min(window.innerWidth,i),s=Math.min(window.innerHeight,r),l=Math.min(d/i,s/r),a=(n?window.innerWidth:t.naturalWidth)*l,c=(n?window.innerHeight:t.naturalHeight)*l,h=(window.innerHeight-c)/2,u=(window.innerWidth-a)/2,o=t.cloneNode(!0);o.removeAttribute(\"id\"),o.style.position=\"absolute\",o.style.width=`${a}px`,o.style.height=`${c}px`,o.style.top=`${h}px`,o.style.left=`${u}px`,o.style.transform=\"\";const m=e.width/a,p=e.height/c,g=(-u+(e.width-a)/2+e.left)/m,v=(-h+(e.height-c)/2+e.top)/p;return o.style.transform=`scale(${m}, ${p}) translate3d(${g}px, ${v}px, 0)`,o.dataset[this.#r]=o.style.transform,t.parentElement?.tagName===\"PICTURE\"&&t.currentSrc&&(o.src=t.currentSrc),o}#y(t){return t.currentSrc.toLowerCase().endsWith(\".svg\")}});  Cross-Origin Resource Sharing (CORS ↗) is a mechanism that uses HTTP headers to grant a web application running on one origin permission to reach selected resources in a different origin. The web application executes a cross-origin HTTP request when it requests a resource that has a different origin from its own, including domain, protocol, or port.\nFor a CORS request to reach a site protected by Access, the request must include a valid CF-Authorization cookie. This may require additional configuration depending on the type of request:\n\n\nSimple requests ↗ are sent directly to the origin, without triggering a preflight request. For configuration instructions, refer to Allow simple requests.\n\n\nPreflighted requests ↗ cause the browser to send an OPTIONS request before sending the actual request. The OPTIONS request checks which methods and headers are allowed by the origin. For configuration instructions, refer to Allow preflighted requests.\n\n\nImportant\n\nDo not troubleshoot CORS in Incognito mode, as this will cause disruptions with Access due to CF-Authorization being blocked as a third-party cookie on cross origin requests.\n\n\nSafari, in particular Safari 13.1, handles cookies in a unique format. In some cases, this can cause CORS to fail. This will be dependent on Apple releasing a patch for handling cookies. This is known to impact macOS 10.15.4 when running Safari 13.1 (15609.1.20.111.8).\n\n\nAllow simple requests\nIf you make a simple CORS request to an Access-protected domain and have not yet logged in, the request will return a CORS error. There are two ways you can resolve this error:\n\nOption 1 — Log in and refresh the page.\nOption 2 — Create a Cloudflare Worker which automatically sends an authentication token. This method only works if both sites involved in the CORS exchange are behind Access.\n\nAuthenticate manually\n\nVisit the target domain in your browser. You will see the Access login page.\nLog in to the target domain. This generates a CF-Authorization cookie.\nRefresh the page that made the CORS request. The refresh resends the request with the newly generated cookie.\n\nAllow preflighted requests\nIf you make a preflighted cross-origin request to an Access-protected domain, the OPTIONS request will return a 403 error. This error occurs regardless of whether you have logged in to the domain. This is because the browser never includes cookies with OPTIONS requests, by design. Cloudflare will therefore block the preflight request, causing the CORS exchange to fail.\nThere are three ways you can resolve this error:\n\nOption 1 — Bypass OPTIONS requests to origin.\nOption 2 - Configure Cloudflare to respond to the OPTIONS request.\nOption 3 — Create a Cloudflare Worker which automatically sends an authentication token. This method only works if both sites involved in the CORS exchange are behind Access.\n\nBypass OPTIONS requests to origin\nYou can configure Cloudflare to send OPTIONS requests directly to your origin server. To bypass Access for OPTIONS requests:\n\nIn Zero Trust ↗, go to Access > Applications.\nLocate the origin that will be receiving OPTIONS requests and select Edit.\nIn the Settings tab, scroll down to CORS settings.\nTurn on Bypass options requests to origin. This will remove all existing CORS settings for this application.\n\nIt is still important to enforce CORS for the Access JWT -- this option should only be used if you have CORS enforcement established in your origin server.\nConfigure response to preflight requests\nYou can configure Cloudflare to respond to the OPTIONS request on your behalf. The OPTIONS request never reaches your origin. After the preflight exchange resolves, the browser will then send the main request which does include the authentication cookie (assuming you have logged into the Access-protected domain).\nTo configure how Cloudflare responds to preflight requests:\n\n\nIn Zero Trust ↗, go to Access > Applications.\n\n\nLocate the origin that will be receiving OPTIONS requests and select Edit.\n\n\nIn the Settings tab, scroll down to CORS settings.\n\n\nConfigure the dashboard CORS settings ↗ to match the response headers sent by your origin.\nFor example, if you have configured api.mysite.comto return the following headers:\nheaders: {  'Access-Control-Allow-Origin': 'https://example.com',  'Access-Control-Allow-Credentials' : true,  'Access-Control-Allow-Methods': 'GET, OPTIONS',  'Access-Control-Allow-Headers': 'office',  'Content-Type': 'application/json',}\nthen go to api.mysite.com in Access and configure Access-Control-Allow-Origin, Access-Control-Allow-Credentials, Access-Control-Allow-Methods, and Access-Control-Allow-Headers.\n\n\n\nSelect Save application.\n\n\n(Optional) You can check your configuration by sending an OPTIONS request to the origin with curl. For example,\nTerminal windowcurl --head --request OPTIONS https://api.mysite.com \\--header 'origin: https://example.com' \\--header 'access-control-request-method: GET'\nshould return a response similar to:\nHTTP/2 200date: Tue, 24 May 2022 21:51:21 GMTvary: Origin, Access-Control-Request-Method, Access-Control-Request-Headersaccess-control-allow-origin: https://example.comaccess-control-allow-methods: GETaccess-control-allow-credentials: trueexpect-ct: max-age=604800, report-uri=\"https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct\"report-to: {\"endpoints\":[{\"url\":\"https:\\/\\/a.nel.cloudflare.com\\/report\\/v3?s=A%2FbOOWJio%2B%2FjuJv5NC%2FE3%2Bo1zBl2UdjzJssw8gJLC4lE1lzIUPQKqJoLRTaVtFd21JK1d4g%2BnlEGNpx0mGtsR6jerNfr2H5mlQdO6u2RdOaJ6n%2F%2BS%2BF9%2Fa12UromVLcHsSA5Y%2Fj72tM%3D\"}],\"group\":\"cf-nel\",\"max_age\":604800}nel: {\"success_fraction\":0.01,\"report_to\":\"cf-nel\",\"max_age\":604800}server: cloudflarecf-ray: 7109408e6b84efe4-EWR\n\n\nSend authentication token with Cloudflare Worker\nIf you have two sites protected by Cloudflare Access, example.com and api.mysite.com, requests made between the two will be subject to CORS checks. Users who log in to example.com will be issued a cookie for example.com. When the user's browser requests api.mysite.com, Cloudflare Access looks for a cookie specific to api.mysite.com. The request will fail if the user has not already logged in to api.mysite.com.\nTo avoid having to log in twice, you can create a Cloudflare Worker that automatically sends authentication credentials to api.mysite.com.\nPrerequisites\n\nWorkers account\nwrangler installation\nexample.com and api.mysite.com domains protected by Access\n\n1. Generate a service token\nFollow these instructions to generate a new Access service token. Copy the Client ID and Client Secret to a safe place, as you will use them in a later step.\n2. Add a Service Auth policy\n\n\nIn Zero Trust ↗, go to Access > Applications.\n\n\nFind your api.mysite.com application and select Edit.\n\n\nSelect the Policies tab.\n\n\nAdd the following policy:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nActionRule typeSelectorService AuthIncludeService Token\n\n\n3. Create a new Worker\nOpen a terminal and run the following command:\n\n(() => {\n\tclass StarlightTabsRestore extends HTMLElement {\n\t\tconnectedCallback() {\n\t\t\tconst starlightTabs = this.closest('starlight-tabs');\n\t\t\tif (!(starlightTabs instanceof HTMLElement) || typeof localStorage === 'undefined') return;\n\t\t\tconst syncKey = starlightTabs.dataset.syncKey;\n\t\t\tif (!syncKey) return;\n\t\t\tconst label = localStorage.getItem(`starlight-synced-tabs__${syncKey}`);\n\t\t\tif (!label) return;\n\t\t\tconst tabs = [...starlightTabs?.querySelectorAll('[role=\"tab\"]')];\n\t\t\tconst tabIndexToRestore = tabs.findIndex(\n\t\t\t\t(tab) => tab instanceof HTMLAnchorElement && tab.textContent?.trim() === label\n\t\t\t);\n\t\t\tconst panels = starlightTabs?.querySelectorAll(':scope > [role=\"tabpanel\"]');\n\t\t\tconst newTab = tabs[tabIndexToRestore];\n\t\t\tconst newPanel = panels[tabIndexToRestore];\n\t\t\tif (tabIndexToRestore < 1 || !newTab || !newPanel) return;\n\t\t\ttabs[0]?.setAttribute('aria-selected', 'false');\n\t\t\ttabs[0]?.setAttribute('tabindex', '-1');\n\t\t\tpanels?.[0]?.setAttribute('hidden', 'true');\n\t\t\tnewTab.removeAttribute('tabindex');\n\t\t\tnewTab.setAttribute('aria-selected', 'true');\n\t\t\tnewPanel.removeAttribute('hidden');\n\t\t}\n\t}\n\tcustomElements.define('starlight-tabs-restore', StarlightTabsRestore);\n})()\n       npm      yarn      pnpm      Terminal windownpm create cloudflare@latest -- authentication-worker  Terminal windowyarn create cloudflare@latest authentication-worker  Terminal windowpnpm create cloudflare@latest authentication-worker     class r extends HTMLElement{static#e=new Map;#t;#n=\"starlight-synced-tabs__\";constructor(){super();const t=this.querySelector('[role=\"tablist\"]');if(this.tabs=[...t.querySelectorAll('[role=\"tab\"]')],this.panels=[...this.querySelectorAll(':scope > [role=\"tabpanel\"]')],this.#t=this.dataset.syncKey,this.#t){const i=r.#e.get(this.#t)??[];i.push(this),r.#e.set(this.#t,i)}this.tabs.forEach((i,c)=>{i.addEventListener(\"click\",e=>{e.preventDefault();const n=t.querySelector('[aria-selected=\"true\"]');e.currentTarget!==n&&this.switchTab(e.currentTarget,c)}),i.addEventListener(\"keydown\",e=>{const n=this.tabs.indexOf(e.currentTarget),s=e.key===\"ArrowLeft\"?n-1:e.key===\"ArrowRight\"?n+1:e.key===\"Home\"?0:e.key===\"End\"?this.tabs.length-1:null;s!==null&&this.tabs[s]&&(e.preventDefault(),this.switchTab(this.tabs[s],s))})})}switchTab(t,i,c=!0){if(!t)return;const e=c?this.getBoundingClientRect().top:0;this.tabs.forEach(s=>{s.setAttribute(\"aria-selected\",\"false\"),s.setAttribute(\"tabindex\",\"-1\")}),this.panels.forEach(s=>{s.hidden=!0});const n=this.panels[i];n&&(n.hidden=!1),t.removeAttribute(\"tabindex\"),t.setAttribute(\"aria-selected\",\"true\"),c&&(t.focus(),r.#r(this,t),window.scrollTo({top:window.scrollY+(this.getBoundingClientRect().top-e)}))}#i(t){!this.#t||typeof localStorage>\"u\"||localStorage.setItem(this.#n+this.#t,t)}static#r(t,i){const c=t.#t,e=r.#s(i);if(!c||!e)return;const n=r.#e.get(c);if(n){for(const s of n){if(s===t)continue;const a=s.tabs.findIndex(o=>r.#s(o)===e);a!==-1&&s.switchTab(s.tabs[a],a,!1)}t.#i(e)}}static#s(t){return t.textContent?.trim()}}customElements.define(\"starlight-tabs\",r);\nThis will prompt you to install the create-cloudflare ↗ package and lead you through setup.\nFor setup, select the following options:\nFor What would you like to start with?, choose Hello World example.For Which template would you like to use?, choose Hello World Worker.For Which language do you want to use?, choose JavaScript.For Do you want to use git for version control?, choose Yes.For Do you want to deploy your application?, choose No (we will be making some changes before deploying).\nGo to your project directory.\nTerminal windowcd authentication-worker\nOpen /src/index.js and delete the existing code and paste in the following example:\n// The hostname where your API livesconst originalAPIHostname = \"api.mysite.com\";\nexport default {  async fetch(request) {    // Change just the host. If the request comes in on example.com/api/name, the new URL is api.mysite.com/api/name    const url = new URL(request.url);    url.hostname = originalAPIHostname;\n    // If your API is located on api.mysite.com/anyname (without \"api/\" in the path),    // remove the \"api/\" part of example.com/api/name\n    // url.pathname = url.pathname.substring(4)\n    // Best practice is to always use the original request to construct the new request    // to clone all the attributes. Applying the URL also requires a constructor    // since once a Request has been constructed, its URL is immutable.    const newRequest = new Request(url.toString(), request);\n    newRequest.headers.set(\"cf-access-client-id\", CF_ACCESS_CLIENT_ID);    newRequest.headers.set(\"cf-access-client-secret\", CF_ACCESS_CLIENT_SECRET);    try {      const response = await fetch(newRequest);\n      // Copy over the response      const modifiedResponse = new Response(response.body, response);\n      // Delete the set-cookie from the response so it doesn't override existing cookies      modifiedResponse.headers.delete(\"set-cookie\");\n      return modifiedResponse;    } catch (e) {      return new Response(JSON.stringify({ error: e.message }), {        status: 500,      });    }  },};\nThen, deploy the Worker to your Cloudflare account:\nTerminal windownpx wrangler deploy\n4. Configure the Worker\n\n\nLog in to the Cloudflare dashboard ↗, select your account and go to Workers & Pages.\n\n\nSelect your newly created Worker.\n\n\nIn the Triggers tab, go to Routes and add example.com/api/*. The Worker is placed on a subpath of example.com to avoid making a cross-origin request.\n\n\nIn the Settings tab, select Variables.\n\n\nUnder Environment Variables, add the following secret variables:\n\nCF_ACCESS_CLIENT_ID = <service token Client ID>\nCF_ACCESS_CLIENT_SECRET = <service token Client Secret>\n\n\n\nThe Client ID and Client Secret are copied from your service token.\n\nEnable the Encrypt option for each variable and select Save.\n\n5. Update HTTP request URLs\nModify your example.com application to send all requests to example.com/api/ instead of api.mysite.com.\nHTTP requests should now work seamlessly between two different Access-protected domains. When a user logs in to example.com, the browser makes a request to the Worker instead of to api.mysite.com. The Worker adds the Access service token to the request headers and then forwards the request to api.mysite.com. Since the service token matches a Service Auth policy, the user no longer needs to log in to api.mysite.com.\nTroubleshooting\nIn general, we recommend the following steps when troubleshooting CORS issues:\n\nCapture a HAR file with the issue described, as well as the JS console log output recorded simultaneously. This is because the HAR file alone will not give full visibility on the reason behind cross-origin issues.\nEnsure that the application has set credentials: 'same-origin' in all fetch or XHR requests.\nIf you are using the cross-origin setting ↗ on script tags, these must be set to \"use-credentials\".\n\nCORS is failing on the same domainCORS checks do not occur on the same domain. If this error occurs, it is likely the request is being sent without the CF-Authorization cookie.     Was this helpful?   Yes      No        What did you like?     Accurate    Easy to understand    Solved my problem    Helped me decide to use the product    Other        What went wrong?     Hard to understand    Incorrect information    Missing the information    Other        Thank you for helping improve Cloudflare's documentation!    class r extends HTMLElement{connectedCallback(){const d={'[data-icon=\"material-symbols:thumb-up-outline-rounded\"]':\"#feedback-yes\",'[data-icon=\"material-symbols:thumb-down-outline-rounded\"]':\"#feedback-no\"},s=this.querySelector(\"#feedback-thumbs\"),o=this.querySelector(\"#feedback-thanks\");if(!(!s||!o))for(const[i,n]of Object.entries(d))this.querySelector(i)?.addEventListener(\"click\",()=>{s.classList.add(\"hidden\");const e=this.querySelector(n);if(!e)return;e.classList.remove(\"hidden\");const a=e.querySelector(\"form\");a&&a.addEventListener(\"submit\",async c=>{c.preventDefault();const t=new FormData(c.target);t.set(\"page\",window.location.pathname),t.set(\"option\",n.split(\"-\")[1]),fetch(\"https://feedback.developers.cloudflare.com\",{method:\"POST\",body:t}),e.classList.add(\"hidden\"),o.classList.remove(\"hidden\")})})}}customElements.define(\"feedback-prompt\",r);       Edit page          Cloudflare DashboardDiscordCommunityLearning CenterSupport Portal\n\t\t\t\tfunction OptanonWrapper() {}\n\t\t\t  Cookie Settings",
  "custom_id": "65BiWaMNX8NB6ANjeCShPpFa1ueUQETpOLk4qNeNt5g7aBtDIrhDdM3k7KtYt3Oa"
}